
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://napltpaxwatxdmkothec.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5hcGx0cGF4d2F0eGRta290aGVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MDgwMDYsImV4cCI6MjA2MDI4NDAwNn0.hmc0knvRNDMZNYnsw1RpYDtOlqP4JUqW6Cn5_FptetE";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true
  }
});

// Add helper function for type assertion to address type issues
export const typedSupabase = supabase as any;

// Define the ExtendedUpload interface
export interface ExtendedUpload {
  id: string;
  created_at?: string | null;
  description?: string | null;
  file_type?: string | null;
  file_url?: string | null;
  filename?: string | null;
  mime_type?: string | null;
  original_name?: string | null;
  size?: number | null;
  storage_path?: string | null;
  subject?: string | null;
  uploaded_by?: string | null;
  visibility?: string | null;
  
  // Extended properties
  bucket_name?: string;
  file_URL?: string;
  fileURL?: string;
  url?: string;
}

// Function to convert database record to extended upload type
export const toExtendedUpload = (data: Database['public']['Tables']['uploads']['Row']): ExtendedUpload => {
  return {
    ...data,
    bucket_name: 'student_uploads', // Default bucket name
    fileURL: data.file_url,
    url: data.file_url,
  };
};
