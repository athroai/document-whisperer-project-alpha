
import React from 'react';
import { Card, CardContent, CardFooter } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Check, X, Edit, Info, Loader2 } from "lucide-react";
import { Badge } from "@/components/ui/badge";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";

interface AIFeedbackCardProps {
  comment: string;
  score?: number;
  outOf?: number;
  isLoading?: boolean;
  onAccept?: () => void;
  onReject?: () => void;
  onEdit?: (comment: string) => void;
  style?: "encouraging" | "detailed" | "headline-only";
}

const AIFeedbackCard: React.FC<AIFeedbackCardProps> = ({
  comment,
  score,
  outOf = 10,
  isLoading = false,
  onAccept,
  onReject,
  onEdit,
  style = "detailed",
}) => {
  if (isLoading) {
    return (
      <Card className="bg-blue-50 border-blue-200">
        <CardContent className="pt-4">
          <div className="flex items-center justify-center py-4">
            <Loader2 className="h-8 w-8 text-blue-500 animate-spin" />
            <span className="ml-3 text-blue-700">Generating AI feedback...</span>
          </div>
        </CardContent>
      </Card>
    );
  }

  if (!comment) {
    return (
      <Card className="bg-gray-50 border-gray-200">
        <CardContent className="pt-4">
          <div className="text-center py-2">
            <p className="text-gray-500">Feedback not available â€” manual review required</p>
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="bg-blue-50 border-blue-200">
      <CardContent className="pt-4">
        <div className="flex justify-between items-start mb-2">
          <div className="flex items-center">
            <TooltipProvider>
              <Tooltip>
                <TooltipTrigger>
                  <Badge variant="outline" className="bg-blue-100 text-blue-700 border-blue-200 flex items-center">
                    <Info className="h-3 w-3 mr-1" />
                    AI Feedback
                  </Badge>
                </TooltipTrigger>
                <TooltipContent>
                  <p className="max-w-xs">This feedback was automatically generated by Athro AI based on the student's work</p>
                </TooltipContent>
              </Tooltip>
            </TooltipProvider>
            
            {style && (
              <Badge variant="outline" className="ml-2 bg-white text-blue-700 border-blue-200">
                {style.charAt(0).toUpperCase() + style.slice(1)}
              </Badge>
            )}
          </div>
          
          {score !== undefined && (
            <div className="font-medium text-blue-800">
              Score: {score}/{outOf}
            </div>
          )}
        </div>
        
        <div className="text-blue-800 mt-4">
          {comment.split('\n').map((paragraph, i) => (
            <p key={i} className={`${i > 0 ? 'mt-2' : ''}`}>{paragraph}</p>
          ))}
        </div>
      </CardContent>
      
      {(onAccept || onReject || onEdit) && (
        <CardFooter className="bg-blue-100/50 border-t border-blue-200 flex justify-end gap-2 py-2">
          {onAccept && (
            <Button 
              size="sm" 
              variant="ghost" 
              className="text-green-700 hover:text-green-800 hover:bg-green-100"
              onClick={onAccept}
            >
              <Check className="h-4 w-4 mr-1" />
              Use
            </Button>
          )}
          
          {onEdit && (
            <Button 
              size="sm" 
              variant="ghost" 
              className="text-blue-700 hover:text-blue-800 hover:bg-blue-100"
              onClick={() => onEdit(comment)}
            >
              <Edit className="h-4 w-4 mr-1" />
              Edit
            </Button>
          )}
          
          {onReject && (
            <Button 
              size="sm" 
              variant="ghost" 
              className="text-red-700 hover:text-red-800 hover:bg-red-100"
              onClick={onReject}
            >
              <X className="h-4 w-4 mr-1" />
              Ignore
            </Button>
          )}
        </CardFooter>
      )}
    </Card>
  );
};

export default AIFeedbackCard;
